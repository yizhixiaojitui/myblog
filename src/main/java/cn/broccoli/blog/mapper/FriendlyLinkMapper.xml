<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.broccoli.blog.mapper.FriendlyLinkMapper">
<cache type="cn.broccoli.blog.redis.RedisCache" />
	<resultMap id="BaseResultMap"
		type="cn.broccoli.blog.po.FriendlyLink">
		<id column="link_id" property="linkId" jdbcType="SMALLINT" />
		<result column="link_name" property="linkName"
			jdbcType="VARCHAR" />
		<result column="link_url" property="linkUrl" jdbcType="VARCHAR" />
		<result column="show_order" property="showOrder"
			jdbcType="TINYINT" />
	</resultMap>
	
	
	<sql id="Base_Column_List">
		link_id, link_name, link_url, show_order
	</sql>
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from friendly_link
		ORDER BY show_order ASC
	</select>
	<select id="selectLinkByPage" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from friendly_link
		<where>
			1=1
			<if test="linkId != null and linkId != ''">
				and link_id LIKE CONCAT('%',#{linkId},'%') 
			</if>
			<if test="linkName != null and linkName !=''">
				and link_name LIKE CONCAT('%',#{linkName},'%') 
			</if>

		</where>
		ORDER BY show_order ASC limit #{page},#{limit};
	</select>
	
	<select id="selectCount" resultType="java.lang.Integer">
		select
		count(*)
		from friendly_link
		<where>
			1=1
			<if test="linkId != null and linkId != ''">
				and link_id LIKE CONCAT('%',#{linkId},'%') 
			</if>
			<if test="linkName != null and linkName !=''">
				and link_name LIKE CONCAT('%',#{linkName},'%') 
			</if>

		</where>
		 
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Short">
		select
		<include refid="Base_Column_List" />
		from friendly_link
		where link_id = #{linkId,jdbcType=SMALLINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
		delete from friendly_link
		where link_id = #{linkId,jdbcType=SMALLINT}
	</delete>
	
	<delete id="deleteFriendlyLink" parameterType="java.util.List">
		delete from friendly_link where link_id in
		<foreach collection="list" item="ids" open="(" close=")"
			separator=",">
			#{ids.linkId}
		</foreach>
	</delete>
	<insert id="insert"
		parameterType="cn.broccoli.blog.po.FriendlyLink">
		insert into friendly_link ( link_name, link_url,
		show_order)
		values (#{linkName,jdbcType=VARCHAR}, #{linkUrl,jdbcType=VARCHAR},
		#{showOrder,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.broccoli.blog.po.FriendlyLink">
		insert into friendly_link
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="linkId != null">
				link_id,
			</if>
			<if test="linkName != null">
				link_name,
			</if>
			<if test="linkUrl != null">
				link_url,
			</if>
			<if test="showOrder != null">
				show_order,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="linkId != null">
				#{linkId,jdbcType=SMALLINT},
			</if>
			<if test="linkName != null">
				#{linkName,jdbcType=VARCHAR},
			</if>
			<if test="linkUrl != null">
				#{linkUrl,jdbcType=VARCHAR},
			</if>
			<if test="showOrder != null">
				#{showOrder,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	
	
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.broccoli.blog.po.FriendlyLink">
		update friendly_link
		<set>
			<if test="linkName != null">
				link_name = #{linkName,jdbcType=VARCHAR},
			</if>
			<if test="linkUrl != null">
				link_url = #{linkUrl,jdbcType=VARCHAR},
			</if>
			<if test="showOrder != null">
				show_order = #{showOrder,jdbcType=TINYINT},
			</if>
		</set>
		where link_id = #{linkId,jdbcType=SMALLINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.broccoli.blog.po.FriendlyLink">
		update friendly_link
		set link_name = #{linkName,jdbcType=VARCHAR},
		link_url = #{linkUrl,jdbcType=VARCHAR},
		show_order = #{showOrder,jdbcType=TINYINT}
		where link_id = #{linkId,jdbcType=SMALLINT}
	</update>
</mapper>