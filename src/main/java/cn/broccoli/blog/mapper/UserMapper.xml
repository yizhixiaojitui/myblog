<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.broccoli.blog.mapper.UserMapper" > 
<cache type="cn.broccoli.blog.redis.RedisCache" />
  <resultMap id="BaseResultMap" type="cn.broccoli.blog.po.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_nikename" property="userNikename" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_qq" property="userQq" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_address" property="userAddress" jdbcType="VARCHAR" />
    <result column="user_last_login_ip" property="userLastLoginIp" jdbcType="VARCHAR" />
    <result column="user_birthday" property="userBirthday" jdbcType="TIMESTAMP" />
    <result column="user_description" property="userDescription" jdbcType="VARCHAR" />
    <result column="user_image_url" property="userImageUrl" jdbcType="VARCHAR" />
    <result column="user_school" property="userSchool" jdbcType="VARCHAR" />
    <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP" />
    <result column="user_register_ip" property="userRegisterIp" jdbcType="VARCHAR" />
    <result column="user_last_update_time" property="userLastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="user_weibo" property="userWeibo" jdbcType="VARCHAR" />
    <result column="user_lock" property="userLock" jdbcType="TINYINT" />
    <result column="user_freeze" property="userFreeze" jdbcType="TINYINT" />
    <result column="user_power" property="userPower" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="usersMap" type="cn.broccoli.blog.utils.UserList" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_nikename" property="userNikename" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_image_url" property="userImageUrl" jdbcType="VARCHAR" />
    <result column="user_register_ip" property="userRegisterIp" jdbcType="VARCHAR" />
    <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP" />
    <result column="user_lock" property="userLock" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="adminUsersMap" type="cn.broccoli.blog.dto.SysAdminUserDTO" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="roleId" jdbcType="BIGINT" property="roleId" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <resultMap id="UserInfoMap" type="cn.broccoli.blog.utils.UserHelper" >
   <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_nikename" property="userNikename" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_birthday" property="userBirthday" jdbcType="TIMESTAMP" />
    <result column="user_description" property="userDescription" jdbcType="VARCHAR" />
    <result column="user_image_url" property="userImageUrl" jdbcType="VARCHAR" />
    <result column="user_power" property="userPower" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    user_id,  user_name, user_nikename, user_pwd, user_phone, user_sex, user_qq, 
    user_email, user_address,   user_last_login_ip, user_birthday, 
    user_description, user_image_url,  user_register_time, user_register_ip, 
    user_last_update_time, user_weibo,  user_lock, user_freeze, 
    user_power
  </sql>
  <select id="selectUsers" resultMap="usersMap">
    select u.user_id,u.user_nikename, u.user_phone, u.user_sex,u.user_email, u.user_image_url,u.user_register_ip,u.user_register_time,u.user_lock from user u 
   
    <where>
    1=1
    <if test="userId != null and userId != ''" >
        and u.user_id LIKE CONCAT('%',#{userId},'%') 
  </if>
  <if test="userNikename != null and userNikename !=''" >
        and u.user_nikename LIKE CONCAT('%',#{userNikename},'%') 
  </if>
  <if test="userEmail != null and userEmail !=''" >
        and u.user_email LIKE CONCAT('%',#{userEmail},'%')
  </if>
  <if test="userSex != null and userSex != ''" >
        and u.user_sex =#{userSex}
  </if>
  </where>   
   limit #{page},#{limit}; 
  </select>
  
  <select id="selectAdminUsers" resultMap="adminUsersMap">
    select u.user_id,u.user_name, u.user_phone,sur.id as roleId,sr.role_name,sr.description from (user u 
    INNER JOIN sys_user_role sur ON u.user_id=sur.user_id) INNER JOIN sys_role sr ON sr.id=sur.role_id
    <where>
     1=1
    <if test="userId != null and userId != ''" >
        and u.user_id LIKE CONCAT('%',#{userId},'%') 
  </if>
  <if test="userName != null and userName !=''" >
        and u.user_name LIKE CONCAT('%',#{userName},'%') 
  </if>
  <if test="roleId != null and roleId !=''" >
        and sur.id = #{roleId}
  </if>
  </where>   
   limit #{page},#{limit}; 
  </select>
  <select id="selectAdminUsersCount" resultType="java.lang.Integer">
    select count(*) from (user u 
    INNER JOIN sys_user_role sur ON u.user_id=sur.user_id) INNER JOIN sys_role sr ON sr.id=sur.role_id
    <where>
     1=1
    <if test="userId != null and userId != ''" >
        and u.user_id LIKE CONCAT('%',#{userId},'%') 
  </if>
  <if test="userName != null and userName !=''" >
        and u.user_name LIKE CONCAT('%',#{userName},'%') 
  </if>
  <if test="roleId != null and roleId !=''" >
        and sur.id = #{roleId}
  </if>
  </where>   
  </select>
  <select id="selectAdminUserRoleByuserIdOrRoleId" resultType="java.lang.Integer">
    select count(*) from sys_user_role where user_id = #{userId} and role_id = #{roleId}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
   <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    *
    from user
    where user_name = #{name}
  </select>
   <select id="countByName" resultType="java.lang.Integer" parameterType="java.lang.String">
  select count(*) from user where user_name= #{name}
  </select>
  <select id="selectIdByName" resultType="java.lang.Integer" parameterType="java.lang.String">
  select user_id from user where user_name= #{name}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insertAdminUserRole">
  	 insert into sys_user_role (role_id,user_id) values(#{roleId},#{userId})
  </insert>
  <update id="updateAdminUserRoleByuserIdOrRoleId"  >
    update sys_user_role
    set
    role_id = #{roleId,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <delete id="deleteAdminUserRoleByuserIdOrRoleId" parameterType="java.util.List">
		delete from sys_user_role where id in
		<foreach collection="list" item="sysAdminUserDTO" open="(" close=")"
			separator=",">
			#{sysAdminUserDTO.roleId}
		</foreach>
	</delete>
  <insert id="insert" parameterType="cn.broccoli.blog.po.User" >
    insert into user (user_id, group_id, user_name, 
      user_nikename, user_pwd, user_phone, 
      user_sex, user_qq, user_email, 
      user_address, user_mark, user_rank_id, 
      user_last_login_ip, user_birthday, user_description, 
      user_image_url, user_school, user_register_time, 
      user_register_ip, user_last_update_time, user_weibo, 
      user_blood_type, user_says, user_lock, 
      user_freeze, user_power)
    values (#{userId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{userNikename,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=VARCHAR}, #{userQq,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userAddress,jdbcType=VARCHAR}, #{userMark,jdbcType=INTEGER}, #{userRankId,jdbcType=TINYINT}, 
      #{userLastLoginIp,jdbcType=VARCHAR}, #{userBirthday,jdbcType=TIMESTAMP}, #{userDescription,jdbcType=VARCHAR}, 
      #{userImageUrl,jdbcType=VARCHAR}, #{userSchool,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP}, 
      #{userRegisterIp,jdbcType=VARCHAR}, #{userLastUpdateTime,jdbcType=TIMESTAMP}, #{userWeibo,jdbcType=VARCHAR}, 
      #{userBloodType,jdbcType=CHAR}, #{userSays,jdbcType=VARCHAR}, #{userLock,jdbcType=TINYINT}, 
      #{userFreeze,jdbcType=TINYINT}, #{userPower,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="userId" parameterType="cn.broccoli.blog.po.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userNikename != null" >
        user_nikename,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userQq != null" >
        user_qq,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userAddress != null" >
        user_address,
      </if>
      <if test="userLastLoginIp != null" >
        user_last_login_ip,
      </if>
      <if test="userBirthday != null" >
        user_birthday,
      </if>
      <if test="userDescription != null" >
        user_description,
      </if>
      <if test="userImageUrl != null" >
        user_image_url,
      </if>
      <if test="userRegisterTime != null" >
        user_register_time,
      </if>
      <if test="userRegisterIp != null" >
        user_register_ip,
      </if>
      <if test="userLastUpdateTime != null" >
        user_last_update_time,
      </if>
      <if test="userWeibo != null" >
        user_weibo,
      </if>
      <if test="userLock != null" >
        user_lock,
      </if>
      <if test="userFreeze != null" >
        user_freeze,
      </if>
      <if test="userPower != null" >
        user_power,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNikename != null" >
        #{userNikename,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null" >
        #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null" >
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLastLoginIp != null" >
        #{userLastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null" >
        #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userDescription != null" >
        #{userDescription,jdbcType=VARCHAR},
      </if>
      <if test="userImageUrl != null" >
        #{userImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="userRegisterTime != null" >
        #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userRegisterIp != null" >
        #{userRegisterIp,jdbcType=VARCHAR},
      </if>
      <if test="userLastUpdateTime != null" >
        #{userLastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userWeibo != null" >
        #{userWeibo,jdbcType=VARCHAR},
      </if>
      <if test="userLock != null" >
        #{userLock,jdbcType=TINYINT},
      </if>
      <if test="userFreeze != null" >
        #{userFreeze,jdbcType=TINYINT},
      </if>
      <if test="userPower != null" >
        #{userPower,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
    <select id="selectUserInfoById"  resultMap="UserInfoMap" >
	SELECT 
	user_id,
	user_name,
	user_nikename,
	user_sex,
	user_image_url,
	user_phone,
	user_email,
	user_description,
	user_power,
	user_birthday
	FROM  `user` where user_id=#{userId}
  </select>
  
  <update id="updatePassword"  >
    update user
    set
    user_pwd = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateUserLockByUserId"  >
    update user
    set
    user_lock = #{userLock,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="cn.broccoli.blog.po.User" >
    update user
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNikename != null" >
        user_nikename = #{userNikename,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null" >
        user_qq = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null" >
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userMark != null" >
        user_mark = #{userMark,jdbcType=INTEGER},
      </if>
      <if test="userRankId != null" >
        user_rank_id = #{userRankId,jdbcType=TINYINT},
      </if>
      <if test="userLastLoginIp != null" >
        user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null" >
        user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userDescription != null" >
        user_description = #{userDescription,jdbcType=VARCHAR},
      </if>
      <if test="userImageUrl != null" >
        user_image_url = #{userImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="userSchool != null" >
        user_school = #{userSchool,jdbcType=VARCHAR},
      </if>
      <if test="userRegisterTime != null" >
        user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userRegisterIp != null" >
        user_register_ip = #{userRegisterIp,jdbcType=VARCHAR},
      </if>
      <if test="userLastUpdateTime != null" >
        user_last_update_time = #{userLastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userWeibo != null" >
        user_weibo = #{userWeibo,jdbcType=VARCHAR},
      </if>
      <if test="userBloodType != null" >
        user_blood_type = #{userBloodType,jdbcType=CHAR},
      </if>
      <if test="userSays != null" >
        user_says = #{userSays,jdbcType=VARCHAR},
      </if>
      <if test="userLock != null" >
        user_lock = #{userLock,jdbcType=TINYINT},
      </if>
      <if test="userFreeze != null" >
        user_freeze = #{userFreeze,jdbcType=TINYINT},
      </if>
      <if test="userPower != null" >
        user_power = #{userPower,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.broccoli.blog.po.User" >
    update user
    set group_id = #{groupId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_nikename = #{userNikename,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_qq = #{userQq,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_mark = #{userMark,jdbcType=INTEGER},
      user_rank_id = #{userRankId,jdbcType=TINYINT},
      user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},
      user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      user_description = #{userDescription,jdbcType=VARCHAR},
      user_image_url = #{userImageUrl,jdbcType=VARCHAR},
      user_school = #{userSchool,jdbcType=VARCHAR},
      user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      user_register_ip = #{userRegisterIp,jdbcType=VARCHAR},
      user_last_update_time = #{userLastUpdateTime,jdbcType=TIMESTAMP},
      user_weibo = #{userWeibo,jdbcType=VARCHAR},
      user_blood_type = #{userBloodType,jdbcType=CHAR},
      user_says = #{userSays,jdbcType=VARCHAR},
      user_lock = #{userLock,jdbcType=TINYINT},
      user_freeze = #{userFreeze,jdbcType=TINYINT},
      user_power = #{userPower,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
   <update id="updateUserInfo" parameterType="cn.broccoli.blog.utils.UserHelper">
    update user
     <set >
     
      <if test="userNikename != null" >
        user_nikename = #{userNikename,jdbcType=VARCHAR},
      </if>
     
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
     
      <if test="userBirthday != null" >
        user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userDescription != null" >
        user_description = #{userDescription,jdbcType=VARCHAR},
      </if>
      <if test="userImageUrl != null" >
        user_image_url = #{userImageUrl,jdbcType=VARCHAR},
      </if>
     
    </set>
    where user_id =#{userId,jdbcType=INTEGER}
  </update>
</mapper>