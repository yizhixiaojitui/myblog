<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.broccoli.blog.mapper.PhotoSortMapper" >
  <resultMap id="BaseResultMap" type="cn.broccoli.blog.po.PhotoSort" >
    <id column="sort_img_id" property="sortImgId" jdbcType="INTEGER" />
    <result column="sort_img_name" property="sortImgName" jdbcType="VARCHAR" />
    <result column="sort_img_time" property="sortImgTime" jdbcType="TIMESTAMP" />
    <result column="sort_img_type" property="sortImgType" jdbcType="VARCHAR" />
    <result column="img_password" property="imgPassword" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="img_sort_question" property="imgSortQuestion" jdbcType="VARCHAR" />
    <result column="img_sort_answer" property="imgSortAnswer" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="top_pic_src" property="topPicSrc" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sort_img_id, sort_img_name, sort_img_time, sort_img_type, img_password, user_id, 
    img_sort_question, img_sort_answer, type_id, top_pic_src
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.broccoli.blog.po.PhotoSortExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from photo_sort
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from photo_sort
    where sort_img_id = #{sortImgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from photo_sort
    where sort_img_id = #{sortImgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.broccoli.blog.po.PhotoSortExample" >
    delete from photo_sort
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.broccoli.blog.po.PhotoSort" >
    insert into photo_sort (sort_img_id, sort_img_name, sort_img_time, 
      sort_img_type, img_password, user_id, 
      img_sort_question, img_sort_answer, type_id, 
      top_pic_src)
    values (#{sortImgId,jdbcType=INTEGER}, #{sortImgName,jdbcType=VARCHAR}, #{sortImgTime,jdbcType=TIMESTAMP}, 
      #{sortImgType,jdbcType=VARCHAR}, #{imgPassword,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{imgSortQuestion,jdbcType=VARCHAR}, #{imgSortAnswer,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{topPicSrc,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.broccoli.blog.po.PhotoSort" >
    insert into photo_sort
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sortImgId != null" >
        sort_img_id,
      </if>
      <if test="sortImgName != null" >
        sort_img_name,
      </if>
      <if test="sortImgTime != null" >
        sort_img_time,
      </if>
      <if test="sortImgType != null" >
        sort_img_type,
      </if>
      <if test="imgPassword != null" >
        img_password,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="imgSortQuestion != null" >
        img_sort_question,
      </if>
      <if test="imgSortAnswer != null" >
        img_sort_answer,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="topPicSrc != null" >
        top_pic_src,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sortImgId != null" >
        #{sortImgId,jdbcType=INTEGER},
      </if>
      <if test="sortImgName != null" >
        #{sortImgName,jdbcType=VARCHAR},
      </if>
      <if test="sortImgTime != null" >
        #{sortImgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sortImgType != null" >
        #{sortImgType,jdbcType=VARCHAR},
      </if>
      <if test="imgPassword != null" >
        #{imgPassword,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="imgSortQuestion != null" >
        #{imgSortQuestion,jdbcType=VARCHAR},
      </if>
      <if test="imgSortAnswer != null" >
        #{imgSortAnswer,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="topPicSrc != null" >
        #{topPicSrc,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.broccoli.blog.po.PhotoSortExample" resultType="java.lang.Integer" >
    select count(*) from photo_sort
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update photo_sort
    <set >
      <if test="record.sortImgId != null" >
        sort_img_id = #{record.sortImgId,jdbcType=INTEGER},
      </if>
      <if test="record.sortImgName != null" >
        sort_img_name = #{record.sortImgName,jdbcType=VARCHAR},
      </if>
      <if test="record.sortImgTime != null" >
        sort_img_time = #{record.sortImgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sortImgType != null" >
        sort_img_type = #{record.sortImgType,jdbcType=VARCHAR},
      </if>
      <if test="record.imgPassword != null" >
        img_password = #{record.imgPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.imgSortQuestion != null" >
        img_sort_question = #{record.imgSortQuestion,jdbcType=VARCHAR},
      </if>
      <if test="record.imgSortAnswer != null" >
        img_sort_answer = #{record.imgSortAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.topPicSrc != null" >
        top_pic_src = #{record.topPicSrc,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update photo_sort
    set sort_img_id = #{record.sortImgId,jdbcType=INTEGER},
      sort_img_name = #{record.sortImgName,jdbcType=VARCHAR},
      sort_img_time = #{record.sortImgTime,jdbcType=TIMESTAMP},
      sort_img_type = #{record.sortImgType,jdbcType=VARCHAR},
      img_password = #{record.imgPassword,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      img_sort_question = #{record.imgSortQuestion,jdbcType=VARCHAR},
      img_sort_answer = #{record.imgSortAnswer,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      top_pic_src = #{record.topPicSrc,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.broccoli.blog.po.PhotoSort" >
    update photo_sort
    <set >
      <if test="sortImgName != null" >
        sort_img_name = #{sortImgName,jdbcType=VARCHAR},
      </if>
      <if test="sortImgTime != null" >
        sort_img_time = #{sortImgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sortImgType != null" >
        sort_img_type = #{sortImgType,jdbcType=VARCHAR},
      </if>
      <if test="imgPassword != null" >
        img_password = #{imgPassword,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="imgSortQuestion != null" >
        img_sort_question = #{imgSortQuestion,jdbcType=VARCHAR},
      </if>
      <if test="imgSortAnswer != null" >
        img_sort_answer = #{imgSortAnswer,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="topPicSrc != null" >
        top_pic_src = #{topPicSrc,jdbcType=INTEGER},
      </if>
    </set>
    where sort_img_id = #{sortImgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.broccoli.blog.po.PhotoSort" >
    update photo_sort
    set sort_img_name = #{sortImgName,jdbcType=VARCHAR},
      sort_img_time = #{sortImgTime,jdbcType=TIMESTAMP},
      sort_img_type = #{sortImgType,jdbcType=VARCHAR},
      img_password = #{imgPassword,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      img_sort_question = #{imgSortQuestion,jdbcType=VARCHAR},
      img_sort_answer = #{imgSortAnswer,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      top_pic_src = #{topPicSrc,jdbcType=INTEGER}
    where sort_img_id = #{sortImgId,jdbcType=INTEGER}
  </update>
</mapper>